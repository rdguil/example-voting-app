pipeline {

    agent none

    stages {
        stage('build') {
            agent {
                docker {
                    image 'node:8.16.0-alpine'
                    args '-v $HOME/.m2:/root/.m2'
                }
            }
            when {
                changeset '**/result/**'
            }
            steps {
                echo 'Compiling result webapp'
                dir('result') {
                    sh 'npm install'
                }
            }
        }
        stage('test') {
            agent {
                docker {
                    image 'node:8.16.0-alpine'
                    args '-v $HOME/.m2:/root/.m2'
                }
            }
            when {
                changeset '**/result/**'
            }
            steps {
                echo 'Running unit tests on result webapp'
                dir('result') {
                    sh 'npm install && npm test'
                }
            }
        }
        stage('docker-package') {
            agent any
            when {
                changeset '**/result/**'
            }
            steps {
                echo 'Packaging result app with docker'
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                        def resultImage = docker.build("rdguil/result:v${env.BUILD_ID}", "./result")
                        resultImage.push()
                        resultImage.push("latest")
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline for result is completed..'
        }
    }
}
