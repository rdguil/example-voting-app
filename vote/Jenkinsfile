pipeline {

    agent none

    stages {
        stage('build') {
            agent {
                docker {
                    image 'python:2.7.16-slim'
                    args '--user root -v $HOME/.m2:/root/.m2'
                }
            }
            when {
                changeset '**/vote/**'
            }
            steps {
                echo 'Compiling vote app'
                dir('vote') {
                    sh 'pip install -r requirements.txt'
                }
            }
        }
        stage('test') {
            agent {
                docker {
                    image 'python:2.7.16-slim'
                    args '--user root -v $HOME/.m2:/root/.m2'
                }
            }
            when {
                changeset '**/vote/**'
            }
            steps {
                echo 'Running unit tests on vote app'
                dir('vote') {
                    sh 'nosetests -v'
                }
            }
        }
        stage('docker-package') {
            agent any
            when {
                changeset '**/vote/**'
            }
            steps {
                echo 'Packaging vote app with docker'
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                        def voteImage = docker.build("rdguil/vote:v${env.BUILD_ID}", "./vote")
                        voteImage.push()
                        voteImage.push("latest")
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline for vote is completed..'
        }
    }
}
